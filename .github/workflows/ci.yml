name: C++

on:
  pull_request:
  merge_group:
  push:
    branches:
      - main
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash

env:
  CMAKE_BUILD_PARALLEL_LEVEL: 3
  CTEST_PARALLEL_LEVEL: 3

jobs:
  cpp-tests:
    name: Tests ${{ matrix.config.os }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - { os: ubuntu-latest, toolchain: "" }
          - { os: macos-latest, toolchain: "" }
          # - { os: windows-latest, toolchain: "-T ClangCl" }
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - shell: bash
        name: setup-gurobi-license
        id: write-license
        env:
          GUROBI_LICENSE: ${{ secrets.GUROBI_LICENSE   }}
        run: |
          echo "$GUROBI_LICENSE" > $PWD/gurobi.lic
          echo "GRB_LICENSE_FILE=$PWD/gurobi.lic" >> $GITHUB_ENV
      - if: runner.os == 'Linux'
        name: download-gurobi-linux
        shell: bash
        run: |
          wget https://packages.gurobi.com/10.0/gurobi10.0.2_linux64.tar.gz
          tar -xvzf gurobi10.0.2_linux64.tar.gz
      - if: runner.os == 'macOs'
        name: download-gurobi-mac
        shell: bash
        run: |
          wget https://packages.gurobi.com/10.0/gurobi10.0.2_macos_universal2.pkg
          sudo installer -pkg gurobi10.0.2_macos_universal2.pkg -target /
      # - if: runner.os == 'Windows'
      #   name: download-gurobi-windows
      #   shell: powershell
      #   run: |
      #     wget https://packages.gurobi.com/10.0/Gurobi-10.0.2-win64.msi -O Gurobi-10.0.2-win64.msi
      #     Start-Process "msiexec" "/i `"Gurobi-10.0.2-win64.msi`" /qn /l*! `"install.log`" LicenseAccepted=1 INSTALLDIR=C:\gurobi1002\" -NoNewWindow -PassThru
      #     ls "C:\"
          # procLog = Start-Process "powershell" "Get-Content -Path `"install.log`" -Wait" -NoNewWindow -PassThru 
          # procMain.WaitForExit() 
          # procLog.Kill()

      # - name: cache-gurobi
      #   uses: actions/cache@v3
      #   with:
      #     path: |
      #       Gurobi-10.0.2-win64.msi
      #       gurobi10.0.2_macos_universal2.pkg
      #       gurobi10.0.2_linux64.tar.gz
      #     key: gurobi

      - name: Configure CMake
        run: cmake -S . -B build -DCMAKE_BUILD_TYPE=Release -DBUILD_TESTS=ON ${{ matrix.config.toolchain }}
      - name: Build
        run: cmake --build build --config Release
      - name: Test
        run: ctest -C Release --output-on-failure --test-dir build --repeat until-pass:3 --timeout 300
      - if: runner.os == 'Linux'
        name: Coverage
        run: |
          cmake -S . -B buildCov -DCMAKE_BUILD_TYPE=Debug -DBUILD_TESTS=ON -DENABLE_COVERAGE=ON
          cmake --build buildCov --config Debug --target rail_test
          ctest -C Debug --output-on-failure --test-dir buildCov --repeat until-pass:3 --timeout 300
      - if: runner.os == 'Linux'
        name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3.1.4
        with:
          fail_ci_if_error: true
          flags: cpp
          gcov: true
          gcov_ignore: "extern/**/*"
          token: ${{ secrets.CODECOV_TOKEN }}
